name: Main workflow
on:
  push:
    branches:
      - main
jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Create database if not exists
      run: |
        docker run --rm \
          -e PGPASSWORD=${{ secrets.DB_PASSWORD }} \
          postgres:latest \
          psql -h ${{ secrets.DB_HOST }} \
               -U ${{ secrets.DB_USER }} \
               -c "CREATE DATABASE \"${{ secrets.DB_NAME }}\";" || true

    #### Добавьте шаг с Flyway-миграциями
    - name: Apply migrations with Flyway
      env:
        DB_URL: jdbc:postgresql://${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        echo "Checking for migrations..."
        if [ -z "$(ls -A ./migrations)" ]; then
          echo "No migrations found. Skipping Flyway."
          exit 0
        fi

        echo "Pulling Flyway Docker image..."
        docker pull flyway/flyway || { echo "Failed to pull Flyway Docker image"; exit 1; }

        echo "Running Flyway migrations..."
        docker run --rm \
          -v $(pwd)/migrations:/flyway/sql \
          flyway/flyway migrate -X \
          -url=${DB_URL} \
          -user=${DB_USER} \
          -password=${DB_PASSWORD} \
          || { echo "Flyway migration failed"; exit 1; }

        echo "Migrations completed successfully."

    ### Этот шаг оставьте без изменений
    - name: Download and setup autotests binaries
      run: |
        wget -qO- cloud-services-engineer.gitlab.yandexcloud.net/practicum-cloud-services/dbops-autotests/-/package_files/1/download > dbopstest
        chmod +x ./dbopstest
        mv ./dbopstest /usr/local/bin/dbopstest

    ### Этот шаг оставьте без изменений
    - name: Test
      run: |
        dbopstest \
          -test.v \
          -host=${{ secrets.DB_HOST }} \
          -port=${{ secrets.DB_PORT }} \
          -user=${{ secrets.DB_USER }} \
          -password=${{ secrets.DB_PASSWORD }} \
          -db=${{ secrets.DB_NAME }}
